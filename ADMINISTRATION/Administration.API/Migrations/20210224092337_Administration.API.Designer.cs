// <auto-generated />
using System;
using Administration.Data.DataContext.SQL_SERVER;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Administration.API.Migrations
{
    [DbContext(typeof(DBContextSQLServer))]
    [Migration("20210224092337_Administration.API")]
    partial class AdministrationAPI
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Administration.Data.Models.Department", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Abolished")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AbolishedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfStaffUnits")
                        .HasColumnType("int");

                    b.Property<string>("SubordinateToId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubordinateToId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Administration.Data.Models.Department", b =>
                {
                    b.HasOne("Administration.Data.Models.Department", "SubordinateTo")
                        .WithMany("ManagesDepartments")
                        .HasForeignKey("SubordinateToId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("SubordinateTo");
                });

            modelBuilder.Entity("Administration.Data.Models.Department", b =>
                {
                    b.Navigation("ManagesDepartments");
                });
#pragma warning restore 612, 618
        }
    }
}
